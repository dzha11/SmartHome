package facade;

import devices.*;
import util.Logger;
import smart.SmartSuggestion;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

//Facade ‚Äî —Ç–µ–ø–µ—Ä—å —Ö—Ä–∞–Ω–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ —Å–æ–æ–±—â–∞–µ—Ç SmartSuggestion –æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏.

public class SmartHomeFacade {
    private final Light light;
    private final MusicSystem musicSystem;
    private final SecurityCamera camera;
    private final SmartDoorLock doorLock;
    private final Thermostat thermostat;
    private final CoffeeMachine coffeeMachine;
    private final Curtains curtains;
    private final SmartTV tv;
    private final AirConditioner ac;

    private final List<Device> allDevices = new ArrayList<>();

    public SmartHomeFacade() {
        this.light = new Light("–õ–∞–º–ø–∞ –≤ —Å–ø–∞–ª—å–Ω–µ");
        this.musicSystem = new MusicSystem("–ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞");
        this.camera = new SecurityCamera("–ö–∞–º–µ—Ä–∞ —É –≤—Ö–æ–¥–∞");
        this.doorLock = new SmartDoorLock("–ó–∞–º–æ–∫ –≤—Ö–æ–¥–Ω–æ–π –¥–≤–µ—Ä–∏");
        this.thermostat = new Thermostat("–¢–µ—Ä–º–æ—Å—Ç–∞—Ç –≤ –≥–æ—Å—Ç–∏–Ω–æ–π");
        this.coffeeMachine = new CoffeeMachine("–ö–æ—Ñ–µ–º–∞—à–∏–Ω–∞ –Ω–∞ –∫—É—Ö–Ω–µ");
        this.curtains = new Curtains("–®—Ç–æ—Ä—ã –≤ —Å–ø–∞–ª—å–Ω–µ");
        this.tv = new SmartTV("–ì–æ—Å—Ç–∏–Ω–∞—è TV");
        this.ac = new AirConditioner("–ì–æ—Å—Ç–∏–Ω–∞—è AC");

        // —Å–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è —É–¥–æ–±–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
        Collections.addAll(allDevices, light, musicSystem, camera, doorLock,
                thermostat, coffeeMachine, curtains, tv, ac);

        Logger.log("SmartHomeFacade", "—É–º–Ω—ã–π –¥–æ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å " + allDevices.size() + " —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏");
    }

    public List<Device> getAllDevices() {
        return new ArrayList<>(allDevices);
    }

    private void safeTurnOn(Device d) {
        d.turnOn();
        SmartSuggestion.recordUse(d.getName());
    }

    private void safeTurnOff(Device d) {
        d.turnOff();
        SmartSuggestion.recordUse(d.getName());
    }

    public void morningRoutine() {
        Logger.log("SmartHomeFacade", " –£—Ç—Ä–µ–Ω–Ω—è—è —Ä—É—Ç–∏–Ω–∞ –∑–∞–ø—É—â–µ–Ω–∞...");
        safeTurnOn(light);
        curtains.openFully();
        safeTurnOn(thermostat);
        safeTurnOn(coffeeMachine);
        safeTurnOn(musicSystem);
        Logger.log("SmartHomeFacade", "‚úÖ –£—Ç—Ä–µ–Ω–Ω—è—è —Ä—É—Ç–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
    }

    public void nightRoutine() {
        Logger.log("SmartHomeFacade", " –ù–æ—á–Ω–∞—è —Ä—É—Ç–∏–Ω–∞ –∑–∞–ø—É—â–µ–Ω–∞...");
        safeTurnOff(light);
        curtains.closeFully();
        safeTurnOff(musicSystem);
        safeTurnOff(thermostat);
        safeTurnOn(camera);
        doorLock.lock();
        SmartSuggestion.recordUse(doorLock.getName());
        Logger.log("SmartHomeFacade", " –ù–æ—á–Ω–∞—è —Ä—É—Ç–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
    }

    public void leaveHome() {
        Logger.log("SmartHomeFacade", " –†–µ–∂–∏–º '–£—à–µ–ª –∏–∑ –¥–æ–º–∞' –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω...");
        safeTurnOff(light);
        safeTurnOff(musicSystem);
        curtains.closeFully();
        safeTurnOff(thermostat);
        safeTurnOff(coffeeMachine);
        safeTurnOn(camera);
        doorLock.lock();
        SmartSuggestion.recordUse(doorLock.getName());
        Logger.log("SmartHomeFacade", " –î–æ–º –∑–∞—â–∏—â–µ–Ω!");
    }

    public void arriveHome() {
        Logger.log("SmartHomeFacade", " –†–µ–∂–∏–º '–î–æ–º–∞' –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω...");
        doorLock.unlock("0000"); // –¥–æ–±–∞–≤–ª–µ–Ω –ø–∏–Ω
        SmartSuggestion.recordUse(doorLock.getName());
        safeTurnOff(camera);
        safeTurnOn(light);
        curtains.openFully();
        safeTurnOn(thermostat);
        safeTurnOn(musicSystem);
        Logger.log("SmartHomeFacade", " –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –¥–æ–º–æ–π!");
    }

    public void startMovieMode() {
        Logger.log("SmartHomeFacade", " Movie mode starting...");
        light.setBrightness(20);
        if (!light.isOn()) safeTurnOn(light);

        curtains.closeFully();

        tv.turnOn();
        tv.setInput("HDMI2");
        tv.setVolume(15);
        SmartSuggestion.recordUse(tv.getName());

        if (musicSystem.isPlaying()) {
            musicSystem.setVolume(15);
            SmartSuggestion.recordUse(musicSystem.getName());
        }

        camera.turnOff();
        Logger.log("SmartHomeFacade", " Movie mode is ON. Enjoy!");
    }

    public void weatherAdjustment(int outsideTemp) {
        Logger.log("SmartHomeFacade", " Weather check: outside temperature = " + outsideTemp + "¬∞C");
        if (outsideTemp < 10) {
            Logger.log("SmartHomeFacade", "üîß It's cold outside ‚Äî turning on heating.");
            thermostat.turnOn();
            thermostat.setTemperature(23);
            ac.turnOff();
            SmartSuggestion.recordUse(thermostat.getName());
        } else if (outsideTemp > 25) {
            Logger.log("SmartHomeFacade", "üîß It's hot outside ‚Äî turning on AC (cooling).");
            ac.turnOn();
            ac.setTemperature(20);
            ac.setMode("COOL");
            thermostat.turnOff();
            SmartSuggestion.recordUse(ac.getName());
        } else {
            Logger.log("SmartHomeFacade", "üîß Comfortable outside ‚Äî switching to eco/minimal climate.");
            thermostat.setTemperature(21);
            thermostat.enableEcoMode();
            SmartSuggestion.recordUse(thermostat.getName());
        }
    }

    public void printStatusSummary() {
        Logger.log("SmartHomeFacade", "----- STATUS SUMMARY -----");
        for (Device d : allDevices) {
            Logger.log("SmartHomeFacade", d.getName() + " | on=" + d.isOn());
        }
        Logger.log("SmartHomeFacade", "--------------------------");
    }
    public void autoDiagnostics() {
        Logger.log("SmartHomeFacade", " –ê–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤...");
        for (Device d : allDevices) {
            if (d instanceof Light light) {
                if (light.isBurnedOut()) {
                    Logger.log("SmartHomeFacade", "[DIAG]: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–≥–æ—Ä–µ–≤—à–∞—è –ª–∞–º–ø–∞: " + light.getName());
                    light.replace();
                }
            }
        }
        Logger.log("SmartHomeFacade", "‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
    }
}
